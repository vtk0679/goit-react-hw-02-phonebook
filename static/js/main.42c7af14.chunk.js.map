{"version":3,"sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactItem/ContactItem.module.css","components/Form/Form.module.css"],"names":["Form","state","name","number","onFormSubmit","e","preventDefault","props","setState","onInputNameChange","target","value","onInputTelChange","onSubmit","this","type","pattern","title","onChange","required","className","s","btnSubmit","Component","Filter","filter","onFilterChange","ContactItem","contact","onDeleteContact","item","message","btnDelete","onClick","id","ContactList","contacts","map","App","find","alert","newContact","nanoid","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.42c7af14.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nimport s from \"./Form.module.css\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    this.props.onFormSubmit(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  onInputNameChange = (e) => {\n    const name = e.target.value;\n    this.setState({ name });\n  };\n\n  onInputTelChange = (e) => {\n    const number = e.target.value;\n    this.setState({ number });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <p>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={this.onInputNameChange}\n          value={this.state.name}\n          required\n        />\n        <p> Tel</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={this.onInputTelChange}\n          value={this.state.number}\n          required\n        />\n        <button className={s.btnSubmit} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\n\nexport default function Filter({ filter, onFilterChange }) {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"find\"\n        onChange={(e) => onFilterChange(e.target.value)}\n        value={filter}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ContactItem.module.css\";\n\nexport default function ContactItem({ contact, onDeleteContact }) {\n  return (\n    <>\n      <li className={s.item}>\n        <p className={s.message}>\n          {contact.name}: {contact.number}\n        </p>\n        <button\n          className={s.btnDelete}\n          onClick={(e) => onDeleteContact(e.target.id)}\n          id={contact.id}\n        >\n          Delete\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport ContactItem from \"./ContactItem\";\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <ul>\n        {contacts.map((contact) => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            onDeleteContact={onDeleteContact}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  onFormSubmit = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(name + \" is already in contacts\");\n      return;\n    }\n    const newContact = { name, number, id: nanoid() };\n    this.setState({ contacts: [newContact, ...this.state.contacts] });\n  };\n\n  onFilterChange = (value) => {\n    return this.setState({ filter: value.toLowerCase() });\n  };\n\n  filter = () =>\n    this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter)\n    );\n\n  onDeleteContact = (id) => {\n    const contacts = this.state.contacts.filter((contact) => contact.id !== id);\n    this.setState({ contacts });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Phonebook</h1>\n          <Form onFormSubmit={this.onFormSubmit}></Form>\n        </div>\n\n        <h2>Contacts</h2>\n\n        <Filter\n          filter={this.state.filter}\n          onFilterChange={this.onFilterChange}\n        />\n        <ContactList\n          contacts={this.filter()}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactItem_btnDelete__2F7Mh\",\"message\":\"ContactItem_message__24Sy8\",\"item\":\"ContactItem_item__K2LJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSubmit\":\"Form_btnSubmit__2tYCQ\"};"],"sourceRoot":""}